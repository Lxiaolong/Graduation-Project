<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.net.sunet.sunetcloud.dao.AccountTypeMapper" >
  <resultMap id="BaseResultMap" type="cn.net.sunet.sunetcloud.domain.AccountType" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="roles" property="roles" jdbcType="VARCHAR" />
    <result column="add" property="add" jdbcType="TINYINT" />
    <result column="delete" property="delete" jdbcType="TINYINT" />
    <result column="query" property="query" jdbcType="TINYINT" />
    <result column="modify" property="modify" jdbcType="TINYINT" />
    <result column="config" property="config" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, roles, add, delete, query, modify, config
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from account_type
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from account_type
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.net.sunet.sunetcloud.domain.AccountType" >
    insert into account_type (id, name, roles, 
      add, delete, query, 
      modify, config)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{roles,jdbcType=VARCHAR}, 
      #{add,jdbcType=TINYINT}, #{delete,jdbcType=TINYINT}, #{query,jdbcType=TINYINT}, 
      #{modify,jdbcType=TINYINT}, #{config,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="cn.net.sunet.sunetcloud.domain.AccountType" >
    insert into account_type
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="roles != null" >
        roles,
      </if>
      <if test="add != null" >
        add,
      </if>
      <if test="delete != null" >
        delete,
      </if>
      <if test="query != null" >
        query,
      </if>
      <if test="modify != null" >
        modify,
      </if>
      <if test="config != null" >
        config,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="roles != null" >
        #{roles,jdbcType=VARCHAR},
      </if>
      <if test="add != null" >
        #{add,jdbcType=TINYINT},
      </if>
      <if test="delete != null" >
        #{delete,jdbcType=TINYINT},
      </if>
      <if test="query != null" >
        #{query,jdbcType=TINYINT},
      </if>
      <if test="modify != null" >
        #{modify,jdbcType=TINYINT},
      </if>
      <if test="config != null" >
        #{config,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.net.sunet.sunetcloud.domain.AccountType" >
    update account_type
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="roles != null" >
        roles = #{roles,jdbcType=VARCHAR},
      </if>
      <if test="add != null" >
        add = #{add,jdbcType=TINYINT},
      </if>
      <if test="delete != null" >
        delete = #{delete,jdbcType=TINYINT},
      </if>
      <if test="query != null" >
        query = #{query,jdbcType=TINYINT},
      </if>
      <if test="modify != null" >
        modify = #{modify,jdbcType=TINYINT},
      </if>
      <if test="config != null" >
        config = #{config,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.net.sunet.sunetcloud.domain.AccountType" >
    update account_type
    set name = #{name,jdbcType=VARCHAR},
      roles = #{roles,jdbcType=VARCHAR},
      add = #{add,jdbcType=TINYINT},
      delete = #{delete,jdbcType=TINYINT},
      query = #{query,jdbcType=TINYINT},
      modify = #{modify,jdbcType=TINYINT},
      config = #{config,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>