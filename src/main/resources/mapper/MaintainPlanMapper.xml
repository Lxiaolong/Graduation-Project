<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.net.sunet.sunetcloud.dao.MaintainPlanMapper" >
  <resultMap id="BaseResultMap" type="cn.net.sunet.sunetcloud.domain.MaintainPlan" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="device_id" property="deviceId" jdbcType="BIGINT" />
    <result column="place" property="place" jdbcType="VARCHAR" />
    <result column="device_conditions_id" property="deviceConditionsId" jdbcType="INTEGER" />
    <result column="account_id" property="accountId" jdbcType="BIGINT" />
    <result column="check_date" property="checkDate" jdbcType="TIMESTAMP" />
    <result column="note" property="note" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, device_id, place, device_conditions_id, account_id, check_date, note
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from maintain_plan
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from maintain_plan
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="cn.net.sunet.sunetcloud.domain.MaintainPlan" >
    insert into maintain_plan (id, device_id, place, 
      device_conditions_id, account_id, check_date, 
      note)
    values (#{id,jdbcType=BIGINT}, #{deviceId,jdbcType=BIGINT}, #{place,jdbcType=VARCHAR}, 
      #{deviceConditionsId,jdbcType=INTEGER}, #{accountId,jdbcType=BIGINT}, #{checkDate,jdbcType=TIMESTAMP}, 
      #{note,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.net.sunet.sunetcloud.domain.MaintainPlan" >
    insert into maintain_plan
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="deviceId != null" >
        device_id,
      </if>
      <if test="place != null" >
        place,
      </if>
      <if test="deviceConditionsId != null" >
        device_conditions_id,
      </if>
      <if test="accountId != null" >
        account_id,
      </if>
      <if test="checkDate != null" >
        check_date,
      </if>
      <if test="note != null" >
        note,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="deviceId != null" >
        #{deviceId,jdbcType=BIGINT},
      </if>
      <if test="place != null" >
        #{place,jdbcType=VARCHAR},
      </if>
      <if test="deviceConditionsId != null" >
        #{deviceConditionsId,jdbcType=INTEGER},
      </if>
      <if test="accountId != null" >
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="checkDate != null" >
        #{checkDate,jdbcType=TIMESTAMP},
      </if>
      <if test="note != null" >
        #{note,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.net.sunet.sunetcloud.domain.MaintainPlan" >
    update maintain_plan
    <set >
      <if test="deviceId != null" >
        device_id = #{deviceId,jdbcType=BIGINT},
      </if>
      <if test="place != null" >
        place = #{place,jdbcType=VARCHAR},
      </if>
      <if test="deviceConditionsId != null" >
        device_conditions_id = #{deviceConditionsId,jdbcType=INTEGER},
      </if>
      <if test="accountId != null" >
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="checkDate != null" >
        check_date = #{checkDate,jdbcType=TIMESTAMP},
      </if>
      <if test="note != null" >
        note = #{note,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.net.sunet.sunetcloud.domain.MaintainPlan" >
    update maintain_plan
    set device_id = #{deviceId,jdbcType=BIGINT},
      place = #{place,jdbcType=VARCHAR},
      device_conditions_id = #{deviceConditionsId,jdbcType=INTEGER},
      account_id = #{accountId,jdbcType=BIGINT},
      check_date = #{checkDate,jdbcType=TIMESTAMP},
      note = #{note,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>